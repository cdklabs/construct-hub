// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a bucket is created for each redirect target 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4ArtifactHash5E28809B": Object {
      "Description": "Artifact hash for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE": Object {
      "Description": "S3 bucket for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC": Object {
      "Description": "S3 key for asset version \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "DomainRedirect1to1ARecord982EC16B": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirect1to1Distribution4D65ABD2",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from1.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirect1to1AaaaRecord3FA93DC9": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirect1to1Distribution4D65ABD2",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from1.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirect1to1CertificateCertificateRequestorFunction1A61DDA0": Object {
      "DependsOn": Array [
        "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyEE57B3FB",
        "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleF7DDA989",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleF7DDA989",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyEE57B3FB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/AZ1234",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyEE57B3FB",
        "Roles": Array [
          Object {
            "Ref": "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleF7DDA989",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DomainRedirect1to1CertificateCertificateRequestorFunctionServiceRoleF7DDA989": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DomainRedirect1to1CertificateCertificateRequestorResourceF588C7FC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "from1.com",
        "HostedZoneId": "AZ1234",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DomainRedirect1to1CertificateCertificateRequestorFunction1A61DDA0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DomainRedirect1to1Distribution4D65ABD2": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "from1.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "DomainRedirect1to1DistributionOrigin1AC87119B",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::GetAtt": Array [
                          "DomainRedirectBucketsA177hjRedirectBuckettobar1com6449D158",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "DomainRedirect1to1DistributionOrigin1AC87119B",
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "DomainRedirect1to1CertificateCertificateRequestorResourceF588C7FC",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2018",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DomainRedirect3to2ARecordC57D5A60": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirect3to2DistributionEF38858B",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from3.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirect3to2AaaaRecord76F8BB06": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirect3to2DistributionEF38858B",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from3.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirect3to2CertificateCertificateRequestorFunction27C18917": Object {
      "DependsOn": Array [
        "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy86F4EAFA",
        "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleF0EC1E06",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleF0EC1E06",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy86F4EAFA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/AZ1234",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy86F4EAFA",
        "Roles": Array [
          Object {
            "Ref": "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleF0EC1E06",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DomainRedirect3to2CertificateCertificateRequestorFunctionServiceRoleF0EC1E06": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DomainRedirect3to2CertificateCertificateRequestorResource9F787E12": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "from3.com",
        "HostedZoneId": "AZ1234",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DomainRedirect3to2CertificateCertificateRequestorFunction27C18917",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DomainRedirect3to2DistributionEF38858B": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "from3.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "DomainRedirect3to2DistributionOrigin1CB7BD250",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::GetAtt": Array [
                          "DomainRedirectBucketsA177hjRedirectBuckettobar2comAEACFF16",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "DomainRedirect3to2DistributionOrigin1CB7BD250",
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "DomainRedirect3to2CertificateCertificateRequestorResource9F787E12",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2018",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DomainRedirectBucketsA177hjRedirectBuckettobar1com6449D158": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "WebsiteConfiguration": Object {
          "RedirectAllRequestsTo": Object {
            "HostName": "to.bar1.com",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DomainRedirectBucketsA177hjRedirectBuckettobar2comAEACFF16": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "WebsiteConfiguration": Object {
          "RedirectAllRequestsTo": Object {
            "HostName": "to.bar2.com",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SubtreeDomainRedirect2to1ARecord20C500DD": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "SubtreeDomainRedirect2to1Distribution440096FB",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from2.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SubtreeDomainRedirect2to1AaaaRecordE5D60E68": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "SubtreeDomainRedirect2to1Distribution440096FB",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from2.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunction0A9B51D2": Object {
      "DependsOn": Array [
        "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCA884C36",
        "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRole64FE40E7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRole64FE40E7",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRole64FE40E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCA884C36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/AZ1234",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCA884C36",
        "Roles": Array [
          Object {
            "Ref": "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunctionServiceRole64FE40E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SubtreeDomainRedirect2to1CertificateCertificateRequestorResource2437BD48": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "from2.com",
        "HostedZoneId": "AZ1234",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SubtreeDomainRedirect2to1CertificateCertificateRequestorFunction0A9B51D2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SubtreeDomainRedirect2to1Distribution440096FB": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "from2.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "SubtreeDomainRedirect2to1DistributionOrigin1E5A3F84F",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::GetAtt": Array [
                          "DomainRedirectBucketsA177hjRedirectBuckettobar1com6449D158",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "SubtreeDomainRedirect2to1DistributionOrigin1E5A3F84F",
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "SubtreeDomainRedirect2to1CertificateCertificateRequestorResource2437BD48",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2018",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
  },
}
`;

exports[`minimal usage 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4ArtifactHash5E28809B": Object {
      "Description": "Artifact hash for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE": Object {
      "Description": "S3 bucket for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC": Object {
      "Description": "S3 key for asset version \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "DomainRedirectARecord4A2488D3": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirectDistributionF059C039",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirectAaaaRecordD0B3B9FD": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "DomainRedirectDistributionF059C039",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "Created by the AWS CDK",
        "HostedZoneId": "AZ1234",
        "Name": "from.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainRedirectBucketsA177hjRedirectBuckettobarcom7E4F605B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "WebsiteConfiguration": Object {
          "RedirectAllRequestsTo": Object {
            "HostName": "to.bar.com",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DomainRedirectCertificateCertificateRequestorFunction650F6DC9": Object {
      "DependsOn": Array [
        "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB415D2E6",
        "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleC3F1FE3E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleC3F1FE3E",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleC3F1FE3E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB415D2E6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/AZ1234",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB415D2E6",
        "Roles": Array [
          Object {
            "Ref": "DomainRedirectCertificateCertificateRequestorFunctionServiceRoleC3F1FE3E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DomainRedirectCertificateCertificateRequestorResource13A577DC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "from.com",
        "HostedZoneId": "AZ1234",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DomainRedirectCertificateCertificateRequestorFunction650F6DC9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DomainRedirectDistributionF059C039": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "from.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "DomainRedirectDistributionOrigin110C8BE20",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::GetAtt": Array [
                          "DomainRedirectBucketsA177hjRedirectBuckettobarcom7E4F605B",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "DomainRedirectDistributionOrigin110C8BE20",
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "DomainRedirectCertificateCertificateRequestorResource13A577DC",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2018",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
  },
}
`;
