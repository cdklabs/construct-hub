// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createRestrictedSecurityGroups creates the correct resources 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287LogRetentionCE72797A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InternalTraffic7EB8CBFA": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/SG",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": "to Route53 DNS resolver",
            "FromPort": 53,
            "IpProtocol": "tcp",
            "ToPort": 53,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": "to Route53 DNS resolver",
            "FromPort": 53,
            "IpProtocol": "udp",
            "ToPort": 53,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalTrafficfromTestStackInternalTrafficF42F4713443027AEFD8": Object {
      "Properties": Object {
        "Description": "Traffic within this SecurityGroup",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "InternalTraffic7EB8CBFA",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "InternalTraffic7EB8CBFA",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "InternalTraffictoAWSS3443CE69D110": Object {
      "Properties": Object {
        "Description": "to AWS S3",
        "DestinationPrefixListId": Object {
          "Fn::GetAtt": Array [
            "S3PrefixListA52A6956",
            "PrefixLists.0.PrefixListId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "InternalTraffic7EB8CBFA",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "InternalTraffictoTestStackInternalTrafficF42F4713443EAA262C8": Object {
      "Properties": Object {
        "Description": "Traffic within this SecurityGroup",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "InternalTraffic7EB8CBFA",
            "GroupId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "InternalTraffic7EB8CBFA",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3PrefixListA52A6956": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "S3PrefixListCustomResourcePolicy456414A6",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"action\\":\\"describePrefixLists\\",\\"service\\":\\"EC2\\",\\"parameters\\":{\\"Filters\\":[{\\"Name\\":\\"prefix-list-name\\",\\"Values\\":[\\"com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3\\"]}]},\\"outputPaths\\":[\\"PrefixLists.0.PrefixListId\\",\\"PrefixLists.0.PrefixListName\\"],\\"physicalResourceId\\":{\\"responsePath\\":\\"PrefixLists.0.PrefixListId\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"action\\":\\"describePrefixLists\\",\\"service\\":\\"EC2\\",\\"parameters\\":{\\"Filters\\":[{\\"Name\\":\\"prefix-list-name\\",\\"Values\\":[\\"com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3\\"]}]},\\"outputPaths\\":[\\"PrefixLists.0.PrefixListId\\",\\"PrefixLists.0.PrefixListName\\"],\\"physicalResourceId\\":{\\"responsePath\\":\\"PrefixLists.0.PrefixListId\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::S3-PrefixList",
      "UpdateReplacePolicy": "Delete",
    },
    "S3PrefixListCustomResourcePolicy456414A6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:DescribePrefixLists",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3PrefixListCustomResourcePolicy456414A6",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "cloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec16388": Object {
      "Properties": Object {
        "AddressFamily": "IPv4",
        "Entries": Array [
          Object {
            "Cidr": "103.21.244.0/22",
          },
          Object {
            "Cidr": "103.22.200.0/22",
          },
          Object {
            "Cidr": "103.31.4.0/22",
          },
          Object {
            "Cidr": "104.16.0.0/13",
          },
          Object {
            "Cidr": "104.24.0.0/14",
          },
          Object {
            "Cidr": "108.162.192.0/18",
          },
          Object {
            "Cidr": "131.0.72.0/22",
          },
          Object {
            "Cidr": "141.101.64.0/18",
          },
          Object {
            "Cidr": "162.158.0.0/15",
          },
          Object {
            "Cidr": "172.64.0.0/13",
          },
          Object {
            "Cidr": "173.245.48.0/20",
          },
          Object {
            "Cidr": "188.114.96.0/20",
          },
          Object {
            "Cidr": "190.93.240.0/20",
          },
          Object {
            "Cidr": "197.234.240.0/22",
          },
          Object {
            "Cidr": "198.41.128.0/17",
          },
        ],
        "MaxEntries": 15,
        "PrefixListName": "cloudflare.IPv4",
      },
      "Type": "AWS::EC2::PrefixList",
    },
    "cloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec16388D0AFA17A": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/cloudflare-IPv4",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "cloudflare.IPv4",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "cloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec16388toTestStackcloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec163884432973C5B9": Object {
      "Properties": Object {
        "Description": "to cloudflare (IPv4)",
        "DestinationPrefixListId": Object {
          "Fn::GetAtt": Array [
            "cloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec16388",
            "PrefixListId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "cloudflareIPv4c2cf61493c41a0c1519c61e5aad250b74ec16388D0AFA17A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "githubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee96908346": Object {
      "Properties": Object {
        "AddressFamily": "IPv4",
        "Entries": Array [
          Object {
            "Cidr": "102.133.202.248/32",
          },
          Object {
            "Cidr": "140.82.112.0/20",
          },
          Object {
            "Cidr": "143.55.64.0/20",
          },
          Object {
            "Cidr": "185.199.108.0/22",
          },
          Object {
            "Cidr": "192.30.252.0/22",
          },
          Object {
            "Cidr": "20.200.245.245/32",
          },
          Object {
            "Cidr": "20.201.28.148/32",
          },
          Object {
            "Cidr": "20.205.243.168/32",
          },
          Object {
            "Cidr": "20.207.73.85/32",
          },
          Object {
            "Cidr": "20.233.54.49/32",
          },
          Object {
            "Cidr": "20.248.137.49/32",
          },
          Object {
            "Cidr": "20.27.177.116/32",
          },
        ],
        "MaxEntries": 12,
        "PrefixListName": "github.api.IPv4",
      },
      "Type": "AWS::EC2::PrefixList",
    },
    "githubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee96908346BFE7C353": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/github.api-IPv4",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "github.api.IPv4",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "githubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee96908346toTestStackgithubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee969083464435B928B6F": Object {
      "Properties": Object {
        "Description": "to github.api (IPv4)",
        "DestinationPrefixListId": Object {
          "Fn::GetAtt": Array [
            "githubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee96908346",
            "PrefixListId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "githubapiIPv4f18ab000cb8fc34f8dfa5488abe95fee96908346BFE7C353",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "githubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801e": Object {
      "Properties": Object {
        "AddressFamily": "IPv4",
        "Entries": Array [
          Object {
            "Cidr": "102.133.202.242/32",
          },
          Object {
            "Cidr": "102.133.202.246/32",
          },
          Object {
            "Cidr": "140.82.112.0/20",
          },
          Object {
            "Cidr": "143.55.64.0/20",
          },
          Object {
            "Cidr": "185.199.108.0/22",
          },
          Object {
            "Cidr": "192.30.252.0/22",
          },
          Object {
            "Cidr": "20.200.245.247/32",
          },
          Object {
            "Cidr": "20.200.245.248/32",
          },
          Object {
            "Cidr": "20.201.28.151/32",
          },
          Object {
            "Cidr": "20.201.28.152/32",
          },
          Object {
            "Cidr": "20.205.243.160/32",
          },
          Object {
            "Cidr": "20.205.243.166/32",
          },
          Object {
            "Cidr": "20.207.73.82/32",
          },
          Object {
            "Cidr": "20.207.73.83/32",
          },
          Object {
            "Cidr": "20.233.54.52/32",
          },
          Object {
            "Cidr": "20.233.54.53/32",
          },
          Object {
            "Cidr": "20.248.137.48/32",
          },
          Object {
            "Cidr": "20.248.137.50/32",
          },
          Object {
            "Cidr": "20.27.177.113/32",
          },
          Object {
            "Cidr": "20.27.177.118/32",
          },
        ],
        "MaxEntries": 20,
        "PrefixListName": "github.git.IPv4",
      },
      "Type": "AWS::EC2::PrefixList",
    },
    "githubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801e48BC5148": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/github.git-IPv4",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "github.git.IPv4",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "githubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801etoTestStackgithubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801e443411C1921": Object {
      "Properties": Object {
        "Description": "to github.git (IPv4)",
        "DestinationPrefixListId": Object {
          "Fn::GetAtt": Array [
            "githubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801e",
            "PrefixListId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "githubgitIPv4dae77de7d5cd0f305046d2c545a635da80e8801e48BC5148",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "githubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bd": Object {
      "Properties": Object {
        "AddressFamily": "IPv4",
        "Entries": Array [
          Object {
            "Cidr": "102.133.202.242/32",
          },
          Object {
            "Cidr": "140.82.112.0/20",
          },
          Object {
            "Cidr": "143.55.64.0/20",
          },
          Object {
            "Cidr": "185.199.108.0/22",
          },
          Object {
            "Cidr": "192.30.252.0/22",
          },
          Object {
            "Cidr": "20.200.245.247/32",
          },
          Object {
            "Cidr": "20.201.28.151/32",
          },
          Object {
            "Cidr": "20.205.243.166/32",
          },
          Object {
            "Cidr": "20.207.73.82/32",
          },
          Object {
            "Cidr": "20.233.54.53/32",
          },
          Object {
            "Cidr": "20.248.137.48/32",
          },
          Object {
            "Cidr": "20.27.177.113/32",
          },
        ],
        "MaxEntries": 12,
        "PrefixListName": "github.web.IPv4",
      },
      "Type": "AWS::EC2::PrefixList",
    },
    "githubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bdF1D815E5": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/github.web-IPv4",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "github.web.IPv4",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "githubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bdtoTestStackgithubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bd4434C803262": Object {
      "Properties": Object {
        "Description": "to github.web (IPv4)",
        "DestinationPrefixListId": Object {
          "Fn::GetAtt": Array [
            "githubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bd",
            "PrefixListId",
          ],
        },
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "githubwebIPv4886475b288542fbcc8528ca3deadd5580758f6bdF1D815E5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
