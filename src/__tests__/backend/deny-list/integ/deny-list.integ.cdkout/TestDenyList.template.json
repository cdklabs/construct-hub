{
  "Resources": {
    "MockDataBucket4719A0C1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/MockDataBucket/Resource"
      }
    },
    "MockDataBucketPolicy6DD22337": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "MockDataBucket4719A0C1"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MockDataBucket4719A0C1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MockDataBucket4719A0C1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/MockDataBucket/Policy/Resource"
      }
    },
    "MockDataBucketAutoDeleteObjectsCustomResourceCF89404C": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "MockDataBucket4719A0C1"
        }
      },
      "DependsOn": [
        "MockDataBucketPolicy6DD22337"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/MockDataBucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "MockDataBucket4719A0C1"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler"
      }
    },
    "MockDataAwsCliLayerE631E742": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip"
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/MockData/AwsCliLayer/Resource",
        "aws:asset:path": "asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip",
        "aws:asset:property": "Content"
      }
    },
    "MockDataCustomResourceF4AE582D": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          }
        ],
        "SourceObjectKeys": [
          "9631bac2371ca47d56451aee83ea0dbbfa75235f246f9be94323debca5ae5ffd.zip"
        ],
        "DestinationBucketName": {
          "Ref": "MockDataBucket4719A0C1"
        },
        "Prune": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/MockData/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MockDataBucket4719A0C1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MockDataBucket4719A0C1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListBucketC1C9D3D9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListBucketC1C9D3D9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "MockDataAwsCliLayerE631E742"
          }
        ],
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8",
        "aws:asset:property": "Code"
      }
    },
    "MonitoringWatchfulDashboard9EB9FD4D": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":0,\"properties\":{\"markdown\":\"# Deny List - Prune Function\\n\\n[button:AWS Lambda Console](https://console.aws.amazon.com/lambda/home?region=",
              {
                "Ref": "AWS::Region"
              },
              "#/functions/",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              "?tab=graph) [button:CloudWatch Logs](https://console.aws.amazon.com/cloudwatch/home?region=",
              {
                "Ref": "AWS::Region"
              },
              "#logEventViewer:group=/aws/lambda/",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              ")\"}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Invocations/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Errors/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              "\",{\"stat\":\"Sum\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"Errors > 0 for 3 datapoints within 15 minutes\",\"value\":0,\"yAxis\":\"left\"}]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Throttles/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              "\",{\"stat\":\"Sum\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"Throttles > 0 for 3 datapoints within 15 minutes\",\"value\":0,\"yAxis\":\"left\"}]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Duration/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneHandler5F946B07"
              },
              "\",{\"label\":\"p99\",\"stat\":\"p99\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"p99 > 720000 for 3 datapoints within 15 minutes\",\"value\":720000,\"yAxis\":\"left\"}]},\"yAxis\":{}}},{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":8,\"properties\":{\"markdown\":\"# Deny List - Prune Delete Function\\n\\n[button:AWS Lambda Console](https://console.aws.amazon.com/lambda/home?region=",
              {
                "Ref": "AWS::Region"
              },
              "#/functions/",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              "?tab=graph) [button:CloudWatch Logs](https://console.aws.amazon.com/cloudwatch/home?region=",
              {
                "Ref": "AWS::Region"
              },
              "#logEventViewer:group=/aws/lambda/",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              ")\"}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":10,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Invocations/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":10,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Errors/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              "\",{\"stat\":\"Sum\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"Errors > 0 for 3 datapoints within 15 minutes\",\"value\":0,\"yAxis\":\"left\"}]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":10,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Throttles/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              "\",{\"stat\":\"Sum\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"Throttles > 0 for 3 datapoints within 15 minutes\",\"value\":0,\"yAxis\":\"left\"}]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":10,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Duration/5min\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
              {
                "Ref": "DenyListPrunePruneQueueHandler087D6B50"
              },
              "\",{\"label\":\"p99\",\"stat\":\"p99\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"p99 > 48000 for 3 datapoints within 15 minutes\",\"value\":48000,\"yAxis\":\"left\"}]},\"yAxis\":{}}}]}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/Dashboard/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneHandlerDB8102B7ErrorsAlarm0390629D": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "Over 0 errors per minute",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "DenyListPrunePruneHandler5F946B07"
            }
          }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneHandlerDB8102B7/ErrorsAlarm/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneHandlerDB8102B7ThrottlesAlarmA7473C59": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "Over 0 throttles per minute",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "DenyListPrunePruneHandler5F946B07"
            }
          }
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneHandlerDB8102B7/ThrottlesAlarm/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneHandlerDB8102B7DurationAlarm35FDCAC9": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "p99 latency >= 720s (80%)",
        "Metrics": [
          {
            "Id": "m1",
            "Label": "p99",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "DenyListPrunePruneHandler5F946B07"
                    }
                  }
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "p99"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 720000
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneHandlerDB8102B7/DurationAlarm/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneQueueHandlerE748308EErrorsAlarmB31B15A4": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "Over 0 errors per minute",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "DenyListPrunePruneQueueHandler087D6B50"
            }
          }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneQueueHandlerE748308E/ErrorsAlarm/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneQueueHandlerE748308EThrottlesAlarm2D33ECEB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "Over 0 throttles per minute",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "DenyListPrunePruneQueueHandler087D6B50"
            }
          }
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneQueueHandlerE748308E/ThrottlesAlarm/Resource"
      }
    },
    "MonitoringWatchfulTestDenyListPrunePruneQueueHandlerE748308EDurationAlarm1FFC9E9E": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "AlarmActions": [],
        "AlarmDescription": "p99 latency >= 48s (80%)",
        "Metrics": [
          {
            "Id": "m1",
            "Label": "p99",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "DenyListPrunePruneQueueHandler087D6B50"
                    }
                  }
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "p99"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 48000
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/Watchful/TestDenyListPrunePruneQueueHandlerE748308E/DurationAlarm/Resource"
      }
    },
    "MonitoringHighSeverityDashboard17D9CD74": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": "{\"widgets\":[]}"
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/Monitoring/HighSeverityDashboard/Resource"
      }
    },
    "DenyListBucketNotificationsEF0449EB": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "DenyListBucketC1C9D3D9"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": "deny-list.json"
                    },
                    {
                      "Name": "prefix",
                      "Value": "deny-list.json"
                    }
                  ]
                }
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "DenyListPrunePruneHandler5F946B07",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "DenyListBucketAllowBucketNotificationsToTestDenyListPrunePruneHandlerDB8102B7D72AB8A7"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Bucket/Notifications/Resource"
      }
    },
    "DenyListBucketC1C9D3D9": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Bucket/Resource"
      }
    },
    "DenyListBucketPolicyFE28C82A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "DenyListBucketC1C9D3D9"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListBucketC1C9D3D9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListBucketC1C9D3D9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListBucketC1C9D3D9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListBucketC1C9D3D9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Bucket/Policy/Resource"
      }
    },
    "DenyListBucketAutoDeleteObjectsCustomResource8261EE69": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "DenyListBucketC1C9D3D9"
        }
      },
      "DependsOn": [
        "DenyListBucketPolicyFE28C82A"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "DenyListBucketAllowBucketNotificationsToTestDenyListPrunePruneHandlerDB8102B7D72AB8A7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DenyListPrunePruneHandler5F946B07",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "DenyListBucketC1C9D3D9",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Bucket/AllowBucketNotificationsToTestDenyListPrunePruneHandlerDB8102B7"
      }
    },
    "DenyListFailoverBucketC0405145": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          },
          {
            "Key": "failover",
            "Value": "true"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/FailoverBucket/Resource"
      }
    },
    "DenyListFailoverBucketPolicy7EF208CC": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "DenyListFailoverBucketC0405145"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListFailoverBucketC0405145",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListFailoverBucketC0405145",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListFailoverBucketC0405145",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListFailoverBucketC0405145",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/FailoverBucket/Policy/Resource"
      }
    },
    "DenyListFailoverBucketAutoDeleteObjectsCustomResource7D8B8ADF": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "DenyListFailoverBucketC0405145"
        }
      },
      "DependsOn": [
        "DenyListFailoverBucketPolicy7EF208CC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/FailoverBucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "DenyListBucketDeploymentAwsCliLayer4F94CAE9": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip"
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/BucketDeployment/AwsCliLayer/Resource",
        "aws:asset:path": "asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip",
        "aws:asset:property": "Content"
      }
    },
    "DenyListBucketDeploymentCustomResource68E58740": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          }
        ],
        "SourceObjectKeys": [
          "7b06823bbcc72a4d3141d044a898d5e4c5daf481a313ff067160af1e936d04e8.zip"
        ],
        "DestinationBucketName": {
          "Ref": "DenyListBucketC1C9D3D9"
        },
        "RetainOnDelete": true,
        "Prune": true
      },
      "DependsOn": [
        "DenyListBucketNotificationsEF0449EB"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/BucketDeployment/CustomResource/Default"
      }
    },
    "DenyListPruneDeleteQueueF9D9EBE3": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "VisibilityTimeout": 120
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/DeleteQueue/Resource"
      }
    },
    "DenyListPrunePruneHandlerServiceRole234C8EF9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneHandler/ServiceRole/Resource"
      }
    },
    "DenyListPrunePruneHandlerServiceRoleDefaultPolicy7222934E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DenyListPruneDeleteQueueF9D9EBE3",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MockDataBucket4719A0C1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MockDataBucket4719A0C1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListBucketC1C9D3D9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListBucketC1C9D3D9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CatalogBuilderMock263D4D67",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DenyListPrunePruneHandlerServiceRoleDefaultPolicy7222934E",
        "Roles": [
          {
            "Ref": "DenyListPrunePruneHandlerServiceRole234C8EF9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "DenyListPrunePruneHandler5F946B07": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "0edbbb44613023a77585118431d6bd8ea563339a4a8c46acc86c66284255fad9.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "DenyListPrunePruneHandlerServiceRole234C8EF9",
            "Arn"
          ]
        },
        "Description": "backend/deny-list/prune-handler.lambda.ts",
        "Environment": {
          "Variables": {
            "PACKAGE_DATA_BUCKET_NAME": {
              "Ref": "MockDataBucket4719A0C1"
            },
            "PACKAGE_DATA_KEY_PREFIX": "data/",
            "PRUNE_QUEUE_URL": {
              "Ref": "DenyListPruneDeleteQueueF9D9EBE3"
            },
            "DENY_LIST_BUCKET_NAME": {
              "Ref": "DenyListBucketC1C9D3D9"
            },
            "DENY_LIST_OBJECT_KEY": "deny-list.json",
            "ON_CHANGE_FUNCTION_NAME": {
              "Fn::GetAtt": [
                "CatalogBuilderMock263D4D67",
                "Arn"
              ]
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 900
      },
      "DependsOn": [
        "DenyListPrunePruneHandlerServiceRoleDefaultPolicy7222934E",
        "DenyListPrunePruneHandlerServiceRole234C8EF9"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneHandler/Resource",
        "aws:asset:path": "asset.0edbbb44613023a77585118431d6bd8ea563339a4a8c46acc86c66284255fad9.bundle",
        "aws:asset:property": "Code"
      }
    },
    "DenyListPrunePruneQueueHandlerServiceRole9BB94361": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneQueueHandler/ServiceRole/Resource"
      }
    },
    "DenyListPrunePruneQueueHandlerServiceRoleDefaultPolicy9ED3B9C8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:DeleteObject*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MockDataBucket4719A0C1",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DenyListPruneDeleteQueueF9D9EBE3",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DenyListPrunePruneQueueHandlerServiceRoleDefaultPolicy9ED3B9C8",
        "Roles": [
          {
            "Ref": "DenyListPrunePruneQueueHandlerServiceRole9BB94361"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneQueueHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "DenyListPrunePruneQueueHandler087D6B50": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "05fc44b7067de3c7c80efc65857efbca626a669b107bc5169f68db4e8e98a39c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "DenyListPrunePruneQueueHandlerServiceRole9BB94361",
            "Arn"
          ]
        },
        "Description": "backend/deny-list/prune-queue-handler.lambda.ts",
        "Environment": {
          "Variables": {
            "PACKAGE_DATA_BUCKET_NAME": {
              "Ref": "MockDataBucket4719A0C1"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 60
      },
      "DependsOn": [
        "DenyListPrunePruneQueueHandlerServiceRoleDefaultPolicy9ED3B9C8",
        "DenyListPrunePruneQueueHandlerServiceRole9BB94361"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneQueueHandler/Resource",
        "aws:asset:path": "asset.05fc44b7067de3c7c80efc65857efbca626a669b107bc5169f68db4e8e98a39c.bundle",
        "aws:asset:property": "Code"
      }
    },
    "DenyListPrunePruneQueueHandlerSqsEventSourceTestDenyListPruneDeleteQueue888622B95BDFDCF8": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "DenyListPrunePruneQueueHandler087D6B50"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "DenyListPruneDeleteQueueF9D9EBE3",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/Prune/PruneQueueHandler/SqsEventSource:TestDenyListPruneDeleteQueue888622B9/Resource"
      }
    },
    "DenyListPeriodicPruneC53BF9DB": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DenyListPrunePruneHandler5F946B07",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/PeriodicPrune/Resource"
      }
    },
    "DenyListPeriodicPruneAllowEventRuleTestDenyListPrunePruneHandlerDB8102B7EA785278": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DenyListPrunePruneHandler5F946B07",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "DenyListPeriodicPruneC53BF9DB",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/DenyList/PeriodicPrune/AllowEventRuleTestDenyListPrunePruneHandlerDB8102B7"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "CatalogBuilderMockServiceRole8558CA02": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/CatalogBuilderMock/ServiceRole/Resource"
      }
    },
    "CatalogBuilderMock263D4D67": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "baa59df6ae2381f2336960f344421f61c8467d1e397292e3dcd036956f228881.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CatalogBuilderMockServiceRole8558CA02",
            "Arn"
          ]
        },
        "Description": "__tests__/backend/deny-list/integ/catalog-builder-mock.lambda.ts",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "CatalogBuilderMockServiceRole8558CA02"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/CatalogBuilderMock/Resource",
        "aws:asset:path": "asset.baa59df6ae2381f2336960f344421f61c8467d1e397292e3dcd036956f228881.bundle",
        "aws:asset:property": "Code"
      }
    },
    "ClientTestServiceRole4F7802CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/ClientTest/ServiceRole/Resource"
      }
    },
    "ClientTestServiceRoleDefaultPolicy3CB30A97": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DenyListBucketC1C9D3D9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DenyListBucketC1C9D3D9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ClientTestServiceRoleDefaultPolicy3CB30A97",
        "Roles": [
          {
            "Ref": "ClientTestServiceRole4F7802CF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/ClientTest/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ClientTestBE4CEC14": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "027b76399aa3841f8f6c40d735889089b4b595288a526bc6eb904d2af1ecd970.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "ClientTestServiceRole4F7802CF",
            "Arn"
          ]
        },
        "Description": "__tests__/backend/deny-list/integ/trigger.client-test.lambda.ts",
        "Environment": {
          "Variables": {
            "BUCKET_NAME": {
              "Ref": "DenyListBucketC1C9D3D9"
            },
            "DENY_LIST_BUCKET_NAME": {
              "Ref": "DenyListBucketC1C9D3D9"
            },
            "DENY_LIST_OBJECT_KEY": "deny-list.json",
            "FILE_NAME": "deny-list.json"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "ClientTestServiceRoleDefaultPolicy3CB30A97",
        "ClientTestServiceRole4F7802CF"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/ClientTest/Resource",
        "aws:asset:path": "asset.027b76399aa3841f8f6c40d735889089b4b595288a526bc6eb904d2af1ecd970.bundle",
        "aws:asset:property": "Code"
      }
    },
    "ClientTestTrigger260D1687": {
      "Type": "Custom::Trigger",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
            "Arn"
          ]
        },
        "HandlerArn": {
          "Ref": "ClientTestCurrentVersionAB7E7F65141fbd8c5afcd6eca531777abc0e8c19"
        }
      },
      "DependsOn": [
        "DenyListBucketAllowBucketNotificationsToTestDenyListPrunePruneHandlerDB8102B7D72AB8A7",
        "DenyListBucketAutoDeleteObjectsCustomResource8261EE69",
        "DenyListBucketNotificationsEF0449EB",
        "DenyListBucketPolicyFE28C82A",
        "DenyListBucketC1C9D3D9",
        "DenyListBucketDeploymentAwsCliLayer4F94CAE9",
        "DenyListBucketDeploymentCustomResource68E58740",
        "DenyListFailoverBucketAutoDeleteObjectsCustomResource7D8B8ADF",
        "DenyListFailoverBucketPolicy7EF208CC",
        "DenyListFailoverBucketC0405145",
        "DenyListPeriodicPruneAllowEventRuleTestDenyListPrunePruneHandlerDB8102B7EA785278",
        "DenyListPeriodicPruneC53BF9DB",
        "DenyListPruneDeleteQueueF9D9EBE3",
        "DenyListPrunePruneHandler5F946B07",
        "DenyListPrunePruneHandlerServiceRoleDefaultPolicy7222934E",
        "DenyListPrunePruneHandlerServiceRole234C8EF9",
        "DenyListPrunePruneQueueHandler087D6B50",
        "DenyListPrunePruneQueueHandlerServiceRoleDefaultPolicy9ED3B9C8",
        "DenyListPrunePruneQueueHandlerServiceRole9BB94361",
        "DenyListPrunePruneQueueHandlerSqsEventSourceTestDenyListPruneDeleteQueue888622B95BDFDCF8"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/ClientTest/Trigger/Resource/Default"
      }
    },
    "ClientTestCurrentVersionAB7E7F65141fbd8c5afcd6eca531777abc0e8c19": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "ClientTestBE4CEC14"
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/ClientTest/CurrentVersion/Resource"
      }
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Role"
      }
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "a442e7f999fb578af28cce5aee09eec7238adf13be26c8d94656e5417c2f6e34.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Handler"
      }
    },
    "PruneTestServiceRole91D2E3A2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/PruneTest/ServiceRole/Resource"
      }
    },
    "PruneTestServiceRoleDefaultPolicyBD33ABA2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MockDataBucket4719A0C1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MockDataBucket4719A0C1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PruneTestServiceRoleDefaultPolicyBD33ABA2",
        "Roles": [
          {
            "Ref": "PruneTestServiceRole91D2E3A2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/PruneTest/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "PruneTest66C7D9FC": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "98e5bb011a19be18f743ba047065ebd52f54adc8acd580c303159436594e1447.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "PruneTestServiceRole91D2E3A2",
            "Arn"
          ]
        },
        "Description": "__tests__/backend/deny-list/integ/trigger.prune-test.lambda.ts",
        "Environment": {
          "Variables": {
            "BUCKET_NAME": {
              "Ref": "MockDataBucket4719A0C1"
            },
            "EXPECTED_KEYS": "[\"data/your/v1.2.4/world.txt\",\"data/your/v1.2.4/hello.txt\"]",
            "TIMEOUT_SEC": "120"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 300
      },
      "DependsOn": [
        "PruneTestServiceRoleDefaultPolicyBD33ABA2",
        "PruneTestServiceRole91D2E3A2"
      ],
      "Metadata": {
        "aws:cdk:path": "TestDenyList/PruneTest/Resource",
        "aws:asset:path": "asset.98e5bb011a19be18f743ba047065ebd52f54adc8acd580c303159436594e1447.bundle",
        "aws:asset:property": "Code"
      }
    },
    "PruneTestTrigger1ECEFB65": {
      "Type": "Custom::Trigger",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
            "Arn"
          ]
        },
        "HandlerArn": {
          "Ref": "PruneTestCurrentVersion332993F882ee6afc5c3a8a9a1b9aea7f6d91b311"
        }
      },
      "DependsOn": [
        "DenyListBucketAllowBucketNotificationsToTestDenyListPrunePruneHandlerDB8102B7D72AB8A7",
        "DenyListBucketAutoDeleteObjectsCustomResource8261EE69",
        "DenyListBucketNotificationsEF0449EB",
        "DenyListBucketPolicyFE28C82A",
        "DenyListBucketC1C9D3D9",
        "DenyListBucketDeploymentAwsCliLayer4F94CAE9",
        "DenyListBucketDeploymentCustomResource68E58740",
        "DenyListFailoverBucketAutoDeleteObjectsCustomResource7D8B8ADF",
        "DenyListFailoverBucketPolicy7EF208CC",
        "DenyListFailoverBucketC0405145",
        "DenyListPeriodicPruneAllowEventRuleTestDenyListPrunePruneHandlerDB8102B7EA785278",
        "DenyListPeriodicPruneC53BF9DB",
        "DenyListPruneDeleteQueueF9D9EBE3",
        "DenyListPrunePruneHandler5F946B07",
        "DenyListPrunePruneHandlerServiceRoleDefaultPolicy7222934E",
        "DenyListPrunePruneHandlerServiceRole234C8EF9",
        "DenyListPrunePruneQueueHandler087D6B50",
        "DenyListPrunePruneQueueHandlerServiceRoleDefaultPolicy9ED3B9C8",
        "DenyListPrunePruneQueueHandlerServiceRole9BB94361",
        "DenyListPrunePruneQueueHandlerSqsEventSourceTestDenyListPruneDeleteQueue888622B95BDFDCF8"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "TestDenyList/PruneTest/Trigger/Resource/Default"
      }
    },
    "PruneTestCurrentVersion332993F882ee6afc5c3a8a9a1b9aea7f6d91b311": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "PruneTest66C7D9FC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "TestDenyList/PruneTest/CurrentVersion/Resource"
      }
    }
  },
  "Outputs": {
    "MonitoringWatchfulWatchfulDashboard1D7DDB1C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home?region=",
            {
              "Ref": "AWS::Region"
            },
            "#dashboards:name=",
            {
              "Ref": "MonitoringWatchfulDashboard9EB9FD4D"
            }
          ]
        ]
      }
    },
    "DenyListSnapshotCommand31529C83": {
      "Description": "Snapshot TestDenyList/DenyList/Bucket",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws s3 sync s3://",
            {
              "Ref": "DenyListBucketC1C9D3D9"
            },
            " s3://",
            {
              "Ref": "DenyListFailoverBucketC0405145"
            }
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}